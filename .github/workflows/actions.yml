# This is a basic workflow to help you get started with Actions

name: CI/CD Workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-deploy:
    if: ${{ true && !contains(github.event.head_commit.message, 'SKIP_CI') && !contains(github.event.head_commit.message, 'SKIP_ALL') && !contains(github.event.head_commit.message, 'SKIP_CICD') }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3.3.0
        with:
          java-version: 17
          distribution: adopt
          
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
      - name: Cache local NPM 
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Build Font-end
        run: |
          ./mvnw clean verify -B -DskipTests -DskipTestsUI=false

      - name: Build Back-end
        run: |
          echo "pull.pause.timeout=60" >> .testcontainers.properties
          echo "client.ping.timeout=10" >> .testcontainers.properties
          ./mvnw clean verify -B -Pnone


      - name: Heroku Auto Deployment
        if: ${{ !contains(github.event.head_commit.message, 'SKIP_CD') }}
        uses: ElayGelbart/Heroku-Auto-Deployment@v1.0.6
        with:
          herokuAppName: mizudo-app
          herokuApiKey: ${{ secrets.HEROKU_API_KEY }}
          # Selected branch to deployment
          branch: main 
